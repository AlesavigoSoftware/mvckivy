<AutoResizeMDIconButton>
    canvas.before:
        Color:
            group: "md-icon-button-bg-color"
            rgba:
                ( \
                { \
                "standard": self.theme_cls.transparentColor, \
                "outlined": self.theme_cls.transparentColor, \
                "tonal": self.theme_cls.secondaryContainerColor, \
                "filled": self.theme_cls.primaryColor, \
                }[self.style] \
                if self.theme_bg_color == "Primary" else \
                self.md_bg_color \
                ) \
                if not self.disabled else \
                ( \
                ( \
                { \
                "standard": self.theme_cls.transparentColor, \
                "outlined": self.theme_cls.transparentColor, \
                "tonal": self.theme_cls.onSurfaceColor[:-1] \
                + [self.icon_button_tonal_opacity_value_disabled_container], \
                "filled": self.theme_cls.onSurfaceColor[:-1] \
                + [self.icon_button_filled_opacity_value_disabled_container], \
                }[self.style] \
                ) \
                if not self.md_bg_color_disabled else self.md_bg_color_disabled \
                )
        SmoothRoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius

    radius: [self.height / 2,]
    halign: "center"
    valign: "center"
    size_hint: None, None
    size: dp(40), dp(40)
    text_size: self.size
    line_color:
        ( \
        ( \
        self.theme_cls.outlineColor \
        if self.theme_line_color == "Primary" else \
        ( \
        self._line_color \
        if self._line_color else \
        self.line_color \
        ) \
        ) \
        if not self.disabled else \
        self.theme_cls.onSurfaceColor[:-1] + \
        [self.icon_button_outlined_opacity_value_disabled_line] \
        ) \
        if self.style == "outlined" else self.theme_cls.transparentColor
    icon_color:
        ( \
        { \
        "standard": self.theme_cls.primaryColor, \
        "tonal": self.theme_cls.onSecondaryContainerColor, \
        "filled": self.theme_cls.onPrimaryColor, \
        "outlined": self.theme_cls.onSurfaceVariantColor, \
        }[self.style] \
        if self.theme_icon_color == "Primary" else \
        ( \
        self.icon_color \
        if self.icon_color else self.theme_cls.transparentColor \
        ) \
        )
    disabled_color:
        { \
        "standard": self.theme_cls.onSurfaceColor[:-1] + \
        [self.icon_button_standard_opacity_value_disabled_icon], \
        "tonal": self.theme_cls.onSurfaceColor[:-1] + \
        [self.icon_button_tonal_opacity_value_disabled_icon], \
        "filled": self.theme_cls.onSurfaceColor[:-1] + \
        [self.icon_button_filled_opacity_value_disabled_icon], \
        "outlined": self.theme_cls.onSurfaceColor[:-1] + \
        [self.icon_button_outlined_opacity_value_disabled_icon], \
        }[self.style] \
        if not self.icon_color_disabled else self.icon_color_disabled
