<MKVList>
    cols: 1
    adaptive_height: True
    padding: self.alias_padding


<MKVBaseListItem>
    size_hint_y: None
    spacing: self.alias_spacing
    md_bg_color: self.alias_md_bg_color
    padding: self.alias_padding
    height: self.alias_height


<MKVListItem>
    orientation: "horizontal"
    leading_container: leading_container
    text_container: text_container
    trailing_container: trailing_container

    BoxLayout:
        id: leading_container
        size_hint_x: None
        width: 0

    AnchorLayout:
        anchor_y: "center"

        BoxLayout:
            id: text_container
            orientation: "vertical"
            size_hint_y: None
            height: self.minimum_height
            spacing: dp(2)

    BoxLayout:
        id: trailing_container
        size_hint_x: None
        width: 0


<MKVBaseListItemText>
    adaptive_height: True
    markup: True
    shorten: True
    shorten_from: "right"
    font_style: "Body"
    role: "medium"
    text_color: self.alias_text_color


<MKVBaseListItemIcon>
    size_hint: None, None
    size: dp(24), dp(24)
    text_color: self.alias_text_color
    disabled_color: self.alias_disabled_color


<MKVListItemTrailingSupportingText>
    adaptive_width: True
    font_style: "Label"
    role: "small"


<MKVListItemLeadingAvatar>
    size_hint: None, None
    size: dp(40), dp(40)
    radius: self.height / 2
    md_bg_color:
        self.theme_cls.primaryContainerColor \
        if not self.disabled else \
        self.theme_cls.onSurfaceColor[:-1] \
        + ( \
        [self._list_item.list_opacity_value_disabled_leading_avatar] \
        if self._list_item else [0] \
        )


<MKVListItemHeadlineText>
    font_style: "Body"
    role: "large"
    bold: True
    text_color: self.theme_cls.onSurfaceColor if root.theme_text_color == "Primary" else (root.text_color if root.text_color else self.theme_cls.onSurfaceColor)
